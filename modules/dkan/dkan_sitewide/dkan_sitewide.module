<?php

/**
 * @file
 * Custom sitewide elements.
 */

include_once 'dkan_sitewide.features.inc';
include_once 'dkan_sitewide.blocks.inc';

/**
 * Adds group block to dataset node.
 */
function dkan_sitewide_user_menu_block() {
  global $user;
  $output = '';
  if ($user->uid) {
    if (module_exists('gravatar')) {
      $output = l('<img alt="my user picture" src="' . gravatar_get_gravatar($user->mail, array('size' => '25')) . '">', 'user', array('html' => TRUE));
    }
    $output .= '<span class="links">' . l($user->name, 'user') . l(t('Logout'), 'user/logout', array('attributes' => array('class' => array('sub')))) . '</span>';
  }
  else {
    $output .= '<span class="links">' . l(t('Login'), 'user/login') . l(t('Register'), 'user/register', array('attributes' => array('class' => array('sub')))) . '</span>';
  }
  return $output;
}

/**
 * Implements hook_page_alter().
 */
function dkan_sitewide_page_alter(&$page) {
  // Adding page title to breadcrumb.
  // Context module does this in hook_page_alter() so we need to as well if
  // we want to add this.
  $breadcrumbs = drupal_get_breadcrumb();
  if (arg(0) == 'dataset' && is_array($breadcrumbs)) {
    $breadcrumbs[1] = t('Datasets');
    $breadcrumbs[2] = t('Search');
  }
  $node = menu_get_object();
  if ($node && $node->type == 'resource') {
    $node_wrapper = entity_metadata_wrapper('node', $node);
    $dataset = $node_wrapper->field_dataset_ref->value();
    if ($dataset) {
      $breadcrumbs[] = l($dataset[0]->title, 'node/' . $dataset[0]->nid);
      if (arg(2) == 'datastore') {
        $breadcrumbs[] = l(dkan_dataset_text_trim($node->title), 'node/' . $node->nid);
      }
    }
  }
  elseif (arg(0) == 'node' && arg(1) == 'add' && arg(2) == 'resource' && $query = drupal_get_query_parameters()) {
    if (isset($query['dataset'])) {
      $nid = $query['dataset'];
      $breadcrumbs[] = l(dkan_dataset_text_trim(dkan_dataset_get_title($nid)), 'node/' . $nid);
    }
  }
  $breadcrumbs[] = drupal_get_title();
  drupal_set_breadcrumb($breadcrumbs);
}

/**
 * Implements theme_preprocess_views_views_json_style_simple().
 */
function dkan_sitewide_preprocess_views_views_json_style_simple(&$vars) {
  // Adds node values to list of resources.
  if ($vars['view']->name == 'dkan_sitewide_resources_json') {
    $view = views_get_view('dkan_sitewide_json');
    $view->preview(4);
    $renderer = $view->style_plugin->row_plugin;
    foreach ($view->field as $field) {
      $vars['rows'][check_plain($field->options['label'])] = filter_xss($field->original_value);
    }
  }
}

/**
 *
 * Implements hook_form_alter().
 */
function dkan_sitewide_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'views_exposed_form' && $form['#id'] == 'views-exposed-form-dataset-page' ||
    $form['#id'] == 'views-exposed-form-user-profile-search-entity-view-1' ||
    $form['#id'] == 'views-exposed-form-groups-search-entity-view-1') {
    unset($form['terms']['#size']);
    $form['#info']['filter-search_api_views_fulltext']['description'] = t('Search');
    $form['#info']['filter-search_api_views_fulltext']['label'] = t('Search');
    $form['submit']['#title'] = '';
  }
}
