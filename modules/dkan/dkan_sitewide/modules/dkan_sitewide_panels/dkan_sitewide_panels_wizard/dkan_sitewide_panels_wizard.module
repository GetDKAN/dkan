<?php
/**
 * @file
 * Code for the DKAN Dashboard Wizard feature.
 */

/**
 * Hook: hook_menu()
 */
function dkan_sitewide_panels_wizard_menu() {

  $items['admin/dkan/add_dashboard'] = array(
  'title' => 'Create Dashboard',
  'description' => 'Wizard for Dashboard creation.',
  'page callback' => 'drupal_get_form',
  'page arguments' => array('add_dashboard_form'),
  'access callback' => TRUE
  );

  return $items;
}

/**
 * Form: Add Dashboard.
 */
function add_dashboard_form($form, &$form_state) {

  ctools_include('common', 'panels');
  ctools_include('display-layout', 'panels');
  ctools_include('plugins', 'panels');
  ctools_include('cleanstring');

  $form['title'] = array
  (
    '#title' => t('Title'),
    '#type' => 'textfield',
    '#size' => 25,
    '#maxlength' => 25,
    '#required' => TRUE,
  );

  $form['layout'] = array(
    '#prefix' => '<div class="panels-choose-layout panels-layouts-checkboxes clearfix">' .
                  '<label>Select layout</label>',
    '#suffix' => '</div>',
  );

  $layouts = panels_common_get_allowed_layouts('panels_page');
  foreach ($layouts as $id => $layout) {
    $category = ctools_cleanstring($layout['category']);
    if ($category == 'Radix') {
      $options[$category][$id] = panels_print_layout_icon($id, $layout, check_plain($layout['title']));
    }
  }

  foreach ($options as $category => $radios) {

    $form['layout'][$category] = array(
    '#prefix' => '<div id="panels-layout-category-' . $category . '-wrapper"><div id="panels-layout-category-' . $category . '" class="form-checkboxes clearfix">',
        '#suffix' => '</div></div>',
    );

    $default_layout = '';
    foreach ($radios as $key => $choice) {

      // Set first layout as default.
      if (empty($default_layout)) {
        $default_layout = $key;
      }

      $form['layout'][$category][$key] = array(
        '#type' => 'radio',
        '#title' => $choice,
        '#parents' => array('layout'),
        '#id' => drupal_clean_css_identifier('edit-layout-' . $key),
        '#return_value' => check_plain($key),
        '#default_value' => in_array($default_layout, array_keys($layouts)) ? $default_layout : NULL,
      );
    }
  }

  $form['submit'] = array(
  '#type' => 'submit',
  '#value' => t('Create Dashboard'),
  );

  return $form;
}

/**
 * Form Validation: Add Dashboard.
 */
function add_dashboard_form_validate($form, &$form_state) {

  $path = string_to_slug($form_state['values']['title']);

  // Check to see if something is already using the Title/Path
  $result = db_query("SELECT * FROM {menu_router} WHERE path = :path", array(':path' => $path))->fetch();
  if ($result) {
    form_error($form['title'], t('There is another content with the same URL.'));
    return;
  }

  // Ensure the path is not already an alias to something else.
  $alias = db_query('SELECT alias, source FROM {url_alias} WHERE alias = :path', array(':path' => $path))->fetchObject();
  if ($alias) {
    form_error($form['title'], t('There is another content with the same URL.'));
  }
}

/**
 * Form Submit: Add Dashboard.
 */
function add_dashboard_form_submit($form, &$form_state) {

  $page_task = page_manager_get_task('page');

  $subtask = page_manager_page_new();
  $subtask->name = string_to_slug('Dashboard - ' . $form_state['values']['title']);
  $subtask->admin_title = 'Dashboard - ' . $form_state['values']['title'];
  $subtask->admin_description = '';
  $subtask->path = string_to_slug($form_state['values']['title']);

  $plugin = page_manager_get_task_handler('panel_context');

  $display = new panels_display();
  $display->layout = $form_state['values']['layout'];
  $display->title = $form_state['values']['title'];

  $handler = page_manager_new_task_handler($plugin);
  $handler->conf['title'] = t('Landing page');
  $handler->conf['display'] = $display;
  $handler->conf['pipeline'] = 'ipe';

  $page = new stdClass();
  page_manager_page_new_page_cache($subtask, $page);
  page_manager_handler_add_to_page($page, $handler);

  page_manager_save_page_cache($page);

  drupal_set_message(t('Your Dashboard has been created.'));

  drupal_goto($subtask->path, array('query' => array('edit' => 'true')));
}

/**
 * Hook: hook_panels_post_render().
 */
function dkan_sitewide_panels_wizard_panels_post_render($panels_display, $renderer) {

  $query_params = drupal_get_query_parameters();

  if (isset($query_params['edit']) && $query_params['edit'] == 'true') {
    drupal_add_js(drupal_get_path('module', 'dkan_sitewide_panels_wizard') .'/js/dkan_sitewide_panels_wizard.js');
  }
}

/**
 * Helper: Slugify string in order to use it as an URL.
 */
function string_to_slug($string) {

  // Replace with dashes anything that isn't A-Z, numbers, dashes, or underscores.
  return strtolower(preg_replace('/[^a-zA-Z0-9-]+/', '-', $string));
}

