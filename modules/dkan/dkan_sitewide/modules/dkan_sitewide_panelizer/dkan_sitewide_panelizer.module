<?php
/**
 * @file
 * Drupal needs this blank file.
 */

function dkan_sitewide_panelizer_form_alter(&$form, &$form_state, $form_id) {

  if (array_key_exists('node', $form_state)) {

    $node = $form_state['node'];

    $handler = panelizer_entity_plugin_get_handler('node');
    if (!$handler) {
      return;
    }

    // Append layouts form only on node creation and when the content type is panelized.
    if ((!isset($node->nid) || isset($node->is_new)) && $handler->is_panelized($node->type . '.default')) {

      ctools_include('common', 'panels');
      ctools_include('cleanstring');

      $default_layout = '';
      $default_panel = $handler->get_default_panelizer_object($node->type, 'node:' . $node->type . ':default:default');
      if ($default_panel) {
        $default_layout = $default_panel->display->layout;
      }

      drupal_set_message(var_dump($default_panel));

      // Add layout form.
      $form['layout'] = array(
        '#prefix' =>
          '<div class="panels-choose-layout panels-layouts-checkboxes clearfix">' .
          '<label>Select layout</label>' .
          '<div class="form-checkboxes clearfix">',
        '#suffix' =>
          '</div></div>',
        '#weight' => $form['additional_settings']['#weight'] - 1,
      );

      $layouts = panels_common_get_allowed_layouts('panelizer_node' . ':' . $node->type);

      foreach ($layouts as $name => $layout) {

        // Set first layout as default if empty.
        if (empty($default_layout)) {
          $default_layout = $name;
        }

        // Add layout options.
        $form['layout'][$name] = array(
          '#type' => 'radio',
          '#title' => panels_print_layout_icon($name, $layout, check_plain($layout['title'])),
          '#parents' => array('layout'),
          '#id' => drupal_clean_css_identifier('edit-layout-' . $name),
          '#return_value' => check_plain($name),
          '#default_value' => in_array($default_layout, array_keys($layouts)) ? $default_layout : NULL,
        );
      }

      // Add custom submit handler.
      $form['actions']['submit']['#submit'][] = 'dkan_sitewide_panelizer_node_submit';
    }

  }
}

function dkan_sitewide_panelizer_node_submit($form, &$form_state) {

  if (isset($form_state['node']) && is_object($form_state['node'])) {

    $nid = $form_state['node']->nid;

    // Load entity.
    $entity = entity_load_single('node', $nid);

    // Create new display with the selected layout.
    $display = new panels_display();
    $display->layout = $form_state['values']['layout'];
    $display->hide_title = TRUE;

    // Update default display.
    $entity->panelizer['default']->display = $display;
    $entity->panelizer['default']->display_is_modified = TRUE;

    // Save entity.
    entity_save('node', $entity);

    // Check: Setting $form_state['reditect'] did not work.
    drupal_goto('node/' . $nid, array('query' => array('edit' => 'true')));

  }
}

function dkan_sitewide_panelizer_preprocess_page(&$vars)
{
  // Get URL parameters
  $query_params = drupal_get_query_parameters();

  if (isset($query_params['edit']) && $query_params['edit'] == 'true') {

    // Get current node.
    $node = menu_get_object();

    $handler = panelizer_entity_plugin_get_handler('node');
    if (!$handler) {
      return;
    }

    if (!empty($node) && $handler->is_panelized($node->type . '.default')) {
      // Add JS to open IPE automatically.
      drupal_add_js(drupal_get_path('module', 'dkan_sitewide_panelizer') . '/js/dkan_sitewide_panelizer.js');
    }
  }
}