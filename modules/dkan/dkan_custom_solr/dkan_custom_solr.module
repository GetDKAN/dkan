<?php
/**
 * @file
 * Code for the DKAN Custom Solr Server.
 */

/**
 * Queries the search_api_server for dkan_acquia_solr.
 */
function dkan_custom_solr_query_dkan_server($server) {
  $query = new EntityFieldQuery();
  $result = $query->entityCondition('entity_type', 'search_api_server', '=')
    ->propertyCondition('machine_name', $server)
    ->execute();
  if (isset($result['search_api_server'])) {
    return $result['search_api_server'];
  }
  return FALSE;
}

/*
 * Implements hook_environment_switch.
 */
function dkan_custom_solr_environment_switch($target_env, $source_env) {
  features_revert_module('dkan_dataset_groups');
  features_revert_module('dkan_sitewide_search_db');
  features_revert_module('dkan_data_story');
}

/**
 * Implements hook_default_search_api_server().
 */
function dkan_custom_solr_default_search_api_server() {
  return array(
    'dkan_custom_solr' => entity_create(
      'search_api_server',
      array(
        'name' => 'DKAN Custom Solr',
        'machine_name' => 'dkan_custom_solr',
        'description' => 'Custom Search API Solr server.',
        'class' => 'search_api_solr_service',
        'enabled' => 1,
        'options' => array(
          'port' => 8983,
          'host' => 'solr',
          'scheme' => 'http',
          'http_method' => 'AUTO',
          'clean_ids' => true,
          'site_hash' => false,
        ),
      )
    ),
  );
}

/**
 * Implements hook_default_search_api_index_alter().
 */
function dkan_custom_solr_default_search_api_index_alter(array &$defaults) {
  // List of the possible search api indexes.
  $index_list = array(
    "stories_index",
    "datasets",
    "groups_di",
  );
  foreach ($index_list as $index) {
    if (isset($defaults[$index])) {
      $defaults[$index]->server = 'dkan_custom_solr';
    }
  }
}
