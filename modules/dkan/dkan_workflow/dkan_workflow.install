<?php
/**
 * @file
 * Installation procedures for dkan_workflow.
 */

/**
 * Implements hook_install().
 */
function dkan_workflow_install() {
  $item = array(
    'link_path' => 'admin/workbench',
    'link_title' => 'My Workbench',
    'menu_name' => 'menu-command-center-menu',
    'weight' => -50,
    'expanded' => 0,
  );

  $item_id = menu_link_save($item);
  dkan_workflow_revert_views();

}

/**
 * Implements hook_enable().
 */
function dkan_workflow_enable() {

  // Enable moderation for dkan_workflow enabled content types upon install. This
  // config is kept persistant using the hook_strongarm_alter().

  // Default dkan content types with moderation.
  $dkan_workflow_content_types = array('dataset', 'resource', 'feedback');

  foreach ($dkan_workflow_content_types as $type) {
    $var_name = 'node_options_' . $type;
    $node_options = variable_get($var_name, array());
    $node_options = (array_key_exists($var_name, $node_options) && is_array($node_options[$var_name]->value)) ?
      $node_options[$var_name]->value :
      $node_options;

    // Remove status if set;
    $node_options = array_diff($node_options, array('status'));

    // Add moderation and revision if needed.
    $node_options = array_values(array_unique(array_merge($node_options, array('moderation', 'revision')), SORT_REGULAR));
    variable_set($var_name, $node_options);
  }
  dkan_workflow_revert_views();
  variable_set('dkan_workflow_content_types', $dkan_workflow_content_types);

  // Add dkan workflow roles to roleassign config.
  $roleassign_roles = variable_get('roleassign_roles', array());
  $roles_rids = array_flip(user_roles());

  $add_roles = array('Workflow Contributor', 'Workflow Moderator', 'Workflow Supervisor');

  foreach($add_roles as $role) {
    $roleassign_roles[$roles_rids[$role]] = (string) $roles_rids[$role];
  }

  variable_set('roleassign_roles', $roleassign_roles);
}

/**
 * Implements hook_disable().
 */
function dkan_workflow_disable() {
  // Remove workflow roles from roleassign_roles variable
  $roleassign_roles = variable_get('roleassign_roles', array());
  $roles_rids = array_flip(user_roles());
  $remove_roles = array('Workflow Contributor', 'Workflow Moderator', 'Workflow Supervisor');

  foreach($remove_roles as $role) {
    unset($roleassign_roles[$roles_rids[$role]]);
  }

  variable_set('roleassign_roles', $roleassign_roles);

}
