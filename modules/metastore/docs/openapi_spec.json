{
    "components": {
        "parameters": {
            "showReferenceIds": {
                "name": "show-reference-ids",
                "in": "query",
                "description": "Metastore objects often include references to other objects stored in other schemas. These references are usually hidden in responses. Some identifiers are necessary to work with other API endpoints (e.g. datastore endpoints may require the distribution identifier). Add `?show-reference-ids` to show the identifiers generated by DKAN.",
                "schema": {
                    "type": "boolean",
                    "default": false
                },
                "style": "form",
                "allowEmptyValue": true
            },
            "schemaId": {
                "name": "schema_id",
                "in": "path",
                "description": "The name a of a specific schema. For instance, \"dataset.\"",
                "schema": {
                    "type": "string"
                },
                "required": true,
                "allowEmptyValue": false,
                "examples": []
            }
        },
        "responses": {
            "201MetadataCreated": {
                "description": "Metadata creation successful.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "endpoint": {
                                    "type": "string",
                                    "description": "Path to the metadata from the API."
                                },
                                "identifier": {
                                    "type": "string",
                                    "description": "Identifier for metadata just created or modified."
                                }
                            }
                        }
                    }
                }
            },
            "412MetadataObjectNotFound": {
                "description": "Missing object, usually due to incorrect identifier.",
                "content": {
                    "application/json": {
                        "schema": { "$ref": "#/components/schemas/errorResponse" },
                        "example": {
                            "message": "No data with the identifier 00000000-0000-0000-0000-000000000000 was found.",
                            "status": 412,
                            "timestamp": "2021-06-14T13:46:06+00:00"
                        }
                    }
                }
            }

        },
        "schemas": {
            "metastoreRevision": {
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string",
                        "description": "Revision identifier."
                    },
                    "published": {
                        "type": "boolean",
                        "description": "Is this the currently published revision?."
                    },
                    "message": {
                        "type": "string",
                        "description": "Revision log message."
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of this revision/modification."
                    },
                    "state": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "published",
                            "hidden",
                            "archived",
                            "orphaned"
                        ],
                        "description": "The workflow state of this revision. Currently five states are supported in DKAN."
                    }
                }
            },
            "metastoreNewRevision": {
                "type": "object",
                "description": "When creating a new revision, you may only submit a message and state.",
                "additionalProperties": false,
                "required": [
                    "state"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Revision log message."
                    },
                    "state": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "published",
                            "hidden",
                            "archived",
                            "orphaned"
                        ],
                        "description": "The workflow state of this revision. Currently five states are supported in DKAN."
                    }
                }
            }

        }
    },
    "paths": {
        "/api/1/metastore/schemas": {
            "get": {
                "operationId": "metastore-get-schemas",
                "summary": "Get list of all schemas",
                "tags": [ "Metastore" ],
                "responses": {
                    "200": {
                        "description": "List of metastore schemas.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Full collection of available metastore schemas"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/1/metastore/schemas/{schema_id}": {
            "get": {
                "operationId": "metastore-get-schema",
                "summary": "Get a specific schema",
                "tags": [ "Metastore" ],
                "parameters": [
                    { "$ref": "#/components/parameters/schemaId" }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A schema definition, see https://json-schema.org/",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Schema not found"
                    }
                }
            }
        },
        "/api/1/metastore/schemas/{schema_id}/items": {
            "get": {
                "operationId": "metastore-get-all",
                "summary": "Get all items for a specific schema (e.g., \"dataset\")",
                "tags": [ "Metastore" ],
                "parameters": [
                    { "$ref": "#/components/parameters/schemaId" },
                    { "$ref": "#/components/parameters/showReferenceIds" }

                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "description": "Array of metastore items matching the chosen schema.",
                                    "items": { "type": "object"}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/1/metastore/schemas/{schema_id}/items/{identifier}/revisions": {
            "get": {
                "operationId": "metastore-get-all-revisions",
                "summary": "Get all revisions for an item.",
                "tags": [ "Metastore" ],
                "parameters": [
                    { "$ref": "#/components/parameters/schemaId" },
                    { "$ref": "#/components/parameters/exampleUuid" }
                ],
                "security": [ { "basic_auth": [] } ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "description": "Array of revision objects.",
                                    "items": { "$ref": "#/components/schemas/metastoreRevision"}
                                }
                            }
                        }
                    },
                    "404": { "$ref": "#/components/responses/404IdNotFound" }
                }
            },
            "post": {
                "operationId": "metastore-revision-post",
                "summary": "Create new item revision/state.",
                "tags": [ "Metastore" ],
                "parameters": [
                    { "$ref": "#/components/parameters/schemaId" },
                    { "$ref": "#/components/parameters/exampleUuid" }
                ],
                "security": [ { "basic_auth": [] } ],
                "requestBody": {
                    "required": true,
                    "description": "Post a new revision object to change an item's moderation state. Simultaneous metastore item content changes and state changes not currently possible.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "description": "Revision log message."
                                    },                
                                    "state": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "published",
                                            "hidden",
                                            "archived",
                                            "orphaned"
                                        ],
                                        "description": "The workflow state of this revision. Currently five states are supported in DKAN."
                                    }                
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": { "$ref": "#/components/responses/201MetadataCreated" },
                    "400": { "$ref": "#/components/responses/400BadJson"}
                }
            }
        },
        "/api/1/metastore/schemas/{schema_id}/items/{identifier}/revisions/{revision_id}": {
            "get": {
                "operationId": "metastore-get-revision",
                "summary": "Get all revisions for an item.",
                "tags": [ "Metastore" ],
                "parameters": [
                    { "$ref": "#/components/parameters/schemaId" },
                    { "$ref": "#/components/parameters/exampleUuid" },
                    {
                        "name": "revision_id",
                        "in": "path",
                        "description": "Revision identifier. Use \"identifier\" property from revision object.",
                        "required": true,
                        "schema": { "type": "string" },
                        "example": "1"
                    }
                ],
                "security": [
                    {
                        "basic_auth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/metastoreRevision" }
                            }
                        }
                    },
                    "404": { "$ref": "#/components/responses/404IdNotFound" }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Metastore",
            "description": "Work with metadata items."
        }
    ]
}