openapi: 3.0.2
info:
  title: API Documentation
  version: Alpha
tags:
  - name: Dataset
  - name: SQL Query
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  parameters:
    datasetUuid:
      name: identifier
      in: path
      description: A dataset uuid
      required: true
      schema:
        type: string
      example: 11111111-1111-4111-1111-111111111111
    distributionUuid:
      name: identifier
      in: path
      description: A distribution uuid
      required: true
      schema:
        type: string
      example: 11111111-1111-4111-1111-111111111111
    property:
      name: schema_id
      in: path
      description: Property of a dataset
      required: true
      schema:
        type: string
      example: keyword
    propertyUuid:
      name: identifier
      in: path
      description: A property uuid
      required: true
      schema:
        type: string
      example: PROPERTY-UUID
    datastoreUuid:
      name: identifier
      in: path
      description: A datastore uuid
      required: true
      schema:
        type: string
      example: DATASTORE-UUID
    harvestPlanId:
      name: plan_id
      in: path
      description: A harvest plan identifier
      required: true
      schema:
        type: string
      example: HARVEST-PLAN-ID
    harvestRunId:
      name: run_id
      in: path
      description: A harvest run identifier
      required: true
      schema:
        type: string
      example: HARVEST-RUN-ID
    showReferenceIds:
      name: show_reference_ids
      in: query
      description: |
        Add `&show_reference_ids` to return the identifiers generated by DKAN. Some identifiers are necessary to work with other API endpoints (Ex. datastore endpoints require the distribution identifier).
      schema:
        type: boolean
      allowEmptyValue: true
  schemas:
    # @TODO: Load directly from dkan's schema/collections/dataset.json schema
    Dataset:
      type: object
      required:
        - title
        - description
        - identifier
        - accessLevel
        - modified
        - keyword
      properties:
        title:
          type: string
        description:
          type: string
        identifier:
          type: string
        accessLevel:
          type: string
          enum:
            - public
            - restricted public
            - non-public
        modified:
          type: string
        keyword:
          type: array
paths:
  /api/1/metastore/schemas/dataset:
    get:
      operationId: dataset-get-schema
      summary: Get dataset schema
      tags:
        - Dataset
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
  /api/1/metastore/schemas/dataset/items:
    get:
      operationId: dataset-get-all
      summary: Get all datasets
      tags:
        - Dataset
      parameters:
        - $ref: '#/components/parameters/showReferenceIds'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dataset'
    post:
      operationId: dataset-create
      summary: Create a dataset
      tags:
        - Dataset
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
            example:
              title: UPDATED Title for 111111
              description: UPDATED Description for 111111
              identifier: 11111111-1111-4111-1111-111111111111
              accessLevel: public
              modified: 2020-02-02
              keyword:
                - test
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                required:
                  - endpoint
                  - identifier
                properties:
                  endpoint:
                    type: string
                  identifier:
                    type: string
        '409':
          description: Resource already exists
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
  /api/1/metastore/schemas/dataset/items/{identifier}:
    get:
      operationId: dataset-get
      summary: Get this dataset
      tags:
        - Dataset
      parameters:
        - name: identifier
          in: path
          description: A dataset uuid
          required: true
          schema:
            type: string
          example: c9e2d352-e24c-4051-9158-f48127aa5692
        - $ref: '#/components/parameters/showReferenceIds'
      responses:
        '200':
          description: Ok
    put:
      operationId: dataset-put
      summary: Replace a dataset
      tags:
        - Dataset
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/datasetUuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
            example:
              title: UPDATED AGAIN Title for 111111
              description: UPDATED AGAIN Description for 111111
              identifier: 11111111-1111-4111-1111-111111111111
              accessLevel: public
              modified: 2020-02-02
              keyword:
                - test
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - endpoint
                  - identifier
                properties:
                  endpoint:
                    type: string
                  identifier:
                    type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
    patch:
      operationId: dataset-patch
      summary: Update a dataset
      tags:
        - Dataset
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/datasetUuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              # Only a subset of Dataset schema
              type: object
            example:
              theme:
                - Some New Theme
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - endpoint
                  - identifier
                properties:
                  endpoint:
                    type: string
                  identifier:
                    type: string
        '401':
          description: Unauthorized
    delete:
      operationId: dataset-delete
      summary: Delete a dataset
      tags:
        - Dataset
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/datasetUuid'
      responses:
        '200':
          description: Dataset has been deleted
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
  /api/1/metastore/schemas/{schema_id}/items:
    get:
      operationId: property-get-all
      summary: Get properties
      tags:
        - Properties
      parameters:
        - $ref: '#/components/parameters/property'
        - $ref: '#/components/parameters/showReferenceIds'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - identifier
                  properties:
                    identifier:
                      type: string
  /api/1/metastore/schemas/{schema_id}/items/{identifier}:
    get:
      operationId: property-get
      summary: Get a property
      tags:
        - Properties
      parameters:
        - $ref: '#/components/parameters/property'
        - $ref: '#/components/parameters/propertyUuid'
        - $ref: '#/components/parameters/showReferenceIds'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - identifier
                properties:
                  identifier:
                    type: string
    put:
      operationId: property-put
      summary: Replace a property
      tags:
        - Properties
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/property'
        - $ref: '#/components/parameters/propertyUuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - identifier
              properties:
                identifier:
                  type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - endpoint
                  - identifier
                properties:
                  endpoint:
                    type: string
                  identifier:
                    type: string
        '401':
          description: Unauthorized
    patch:
      operationId: property-patch
      summary: Update a property
      tags:
        - Properties
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/property'
        - $ref: '#/components/parameters/propertyUuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              # Only a subset of Property schema
              type: object
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - endpoint
                  - identifier
                properties:
                  endpoint:
                    type: string
                  identifier:
                    type: string
        '401':
          description: Unauthorized
  /api/1/datastore/sql:
    get:
      operationId: datastore-query
      summary: Query resources in datastore
      description: >
        Interact with resources in the datastore using an SQL-like syntax.
      tags:
        - SQL Query
      parameters:
        - name: query
          in: query
          description: |
            A SQL-like query.

            A `SELECT` using the `show_db_columns` parameter will make it easier to build queries against the data as
            it returns columns without spaces and in some cases, truncated names where the human readable column header
            is very long.

            `/api/1/datastore/sql?query=[SELECT * FROM DATASTORE_UUID][LIMIT 1 OFFSET 0];&show_db_columns`

            You can then build the `SELECT` part of the query. Do not use spaces between its arguments.

            `/api/1/datastore/sql?query=[SELECT a,b,c, FROM DATASTORE_UUID]`

            `WHERE` can use any column in the data.

            `/api/1/datastore/sql?query=[SELECT a,b FROM DATASTORE_UUID][WHERE c = "CCC"];&show_db_columns`

            `LIMIT` and `OFFSET` allow you to get more than the 500 record limit, by using successive queries:

            `/api/1/datastore/sql?query=[SELECT a,b,c FROM DATASTORE_UUID][WHERE d = "CCC"][LIMIT 500 OFFSET 0];&show_db_columns`

            `/api/1/datastore/sql?query=[SELECT a,b,c FROM DATASTORE_UUID][WHERE d = "DDD"][LIMIT 500 OFFSET 500];&show_db_columns`

            Note: `SELECT`, `WHERE` and `LIMIT...OFFSET` clauses must each be included within brackets `[ ]`.
          required: true
          schema:
            type: string
          example: '[SELECT * FROM DATASTORE-UUID];'
        - name: show_db_columns
          in: query
          description: |
            Add `&show_db_columns` to return columns without spaces and in some cases, truncated names where the human
            readable column header is very long.
          schema:
            type: boolean
          allowEmptyValue: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/1/harvest/plans:
    get:
      operationId: harvest-get-all
      summary: List harvest identifiers
      description: >
        Lists the identifiers of all registered harvests.
      tags:
        - Harvest
      security:
        - basicAuth: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized
    post:
      operationId: harvest-register
      summary: Register a new harvest
      description: >
        Registers a new harvest, after validating against our schema.
      tags:
        - Harvest
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - endpoint
                  - identifier
                properties:
                  endpoint:
                    type: string
                  identifier:
                    type: string
        '401':
          description: Unauthorized
  /api/1/harvest/plans/{plan_id}:
    get:
      operationId: harvest-get-single
      summary: Get single harvest plan
      description: >
        Get the json plan of a registered harvest, based on the its harvest id.
      tags:
        - Harvest
      parameters:
        - $ref: '#/components/parameters/harvestPlanId'
      security:
        - basicAuth: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - identifier
                  - extract
                  - load
                properties:
                  identifier:
                    type: string
                  extract:
                    type: object
                    required:
                      - type
                      - uri
                    properties:
                      type:
                        type: string
                      uri:
                        type: string
                  load:
                    type: object
                    required:
                      - type
                    properties:
                      type:
                        type: string
        '401':
          description: Unauthorized
  /api/1/harvest/runs/{run_id}:
    get:
      operationId: harvest-run-info
      summary: Information about a previous run
      description: >
        Gives information about a previous run for a specific harvest run.
      tags:
        - Harvest
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/harvestRunId'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
  /api/1/harvest/runs:
    get:
      operationId: harvest-info
      summary: List previous runs for a harvest id
      description: >
        Lists the identifiers (timestamps) of previous runs for a particular
        harvest id.
      tags:
        - Harvest
      security:
        - basicAuth: []
      parameters:
        - in: query
          name: plan
          description: A plan identifier
          required: true
          schema:
            type: string
          example: PLAN-ID
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '401':
          description: Unauthorized
    post:
      operationId: harvest-run
      summary: Run a harvest
      description: >
        Runs a harvest for a specific plan identifier inside json object payload.
      tags:
        - Harvest
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - plan_id
              properties:
                plan_id:
                  type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - identifier
                  - result
                properties:
                  identifier:
                    type: string
                  result:
                    type: string
        '401':
          description: Unauthorized
  /api/1/datastore/imports:
    get:
      operationId: datastore-list
      summary: List datastores
      description: >
        Returns a list of all stored importers, with data about their file fetcher and status.
      tags:
        - Datastore
      security:
        - basicAuth: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
    post:
      operationId: datastore-import
      summary: Datastore import
      description: >
        Immediately starts the import process for a datastore.
      tags:
        - Datastore
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - resource_id
              properties:
                plan_id:
                  type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
  /api/1/datastore/imports/{identifier}:
    get:
      operationId: datastore-get
      summary: Datastore statistics
      description: >
        Returns the numbers of rows and columns, and a list of columns headers
        from the datastore.
      tags:
        - Datastore
      parameters:
        - $ref: '#/components/parameters/datastoreUuid'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - numOfRows
                  - numOfColumns
                  - columns
                properties:
                  numOfRows:
                    type: integer
                  numOfColumns:
                    type: integer
                  columns:
                    type: array
                    items:
                      type: string
    delete:
      operationId: datastore-delete
      summary: Delete a datastore
      description: >
        Delete one or more datastores. If the uuid parameter is that of
        a resource, delete that resource. If the uuid parameter is that of
        a dataset, delete all resources of that dataset.
      tags:
        - Datastore
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/datastoreUuid'
      responses:
        '200':
          description: Dataset has been deleted
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string

  /api/1/datastore/query:
    post:
      operationId: datastore-query-post
      summary: Query one or more datastore resources
      tags:
        - Datastore
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Coming soon, for now refer to /api/1/datastore/query/schema
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
               type: object
    get:
      operationId: datastore-query-get
      summary: Query one or more datastore resources
      tags:
        - Datastore
      security:
        - basicAuth: []
      parameters:
        - in: query
          name: query
          content:
            application/json:
              schema:
                type: object
                description: Coming soon, for now refer to /api/1/datastore/query/schema
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
               type: object

  /api/1/datastore/query/download:
    post:
      operationId: datastore-query-download-post
      summary: Query one or more datastore resources for file download
      tags:
        - Datastore
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Coming soon, for now refer to /api/1/datastore/query/schema
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
               type: object
    get:
      operationId: datastore-query-download-get
      summary: Query one or more datastore resources for file download with get
      tags:
        - Datastore
      security:
        - basicAuth: []
      parameters:
        - in: query
          name: query
          content:
            application/json:
              schema:
                type: object
                description: Coming soon, for now refer to /api/1/datastore/query/schema
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
               type: object
      
      
  /api/1/datastore/query/{identifier}:
    parameters:
      - $ref: '#/components/parameters/distributionUuid'
    post:
      operationId: datastore-query-post
      summary: Query a single datastore resource
      tags:
        - Datastore
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Coming soon, for now refer to /api/1/datastore/query/schema. However, do not include a "resources" array on this endpoint.
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
               type: object
    get:
      operationId: datastore-query-get
      summary: Query a single datastore resource with get
      tags:
        - Datastore
      security:
        - basicAuth: []
      parameters:
        - in: query
          name: query
          content:
            application/json:
              schema:
                type: object
                description: Coming soon, for now refer to /api/1/datastore/query/schema. However, do not include a "resources" array on this endpoint.
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
               type: object

  /api/1/datastore/query/{identifier}/download:
    parameters:
      - $ref: '#/components/parameters/distributionUuid'
    get:
      operationId: datastore-query-download-get
      summary: Query a single datastore resources for file download
      tags:
        - Datastore
      security:
        - basicAuth: []
      parameters:
        - in: query
          name: query
          content:
            application/json:
              schema:
                type: object
                description: Coming soon, for now refer to /api/1/datastore/query/schema. However, do not include a "resources" array on this endpoint.
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
               type: object

  /api/1/metastore/schemas/dataset/items/{identifier}/docs:
    get:
      operationId: docs-get-dataset-specific
      summary: Dataset-specific json documentation
      tags:
        - Documentation
      parameters:
        - name: identifier
          in: path
          description: A dataset uuid
          required: true
          schema:
            type: string
          example: c9e2d352-e24c-4051-9158-f48127aa5692
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
