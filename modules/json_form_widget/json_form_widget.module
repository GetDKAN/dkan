<?php

/**
 * @file
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Submit handler for the "add-one-more" button.
 *
 * Increments the max counter and causes a rebuild.
 */
function json_form_widget_add_one(array &$form, FormStateInterface $form_state) {
  $widget_array_info = $form_state->get('json_form_widget_array');
  $field = $form_state->getTriggeringElement()['#name'];
  $amount = $widget_array_info[$field]['amount'];
  $widget_array_info[$field]['amount'] = $amount + 1;
  $widget_array_info[$field]['adding'] = TRUE;
  $form_state->set('json_form_widget_array', $widget_array_info);

  // Since our buildForm() method relies on the value of 'num_names' to
  // generate 'name' form elements, we have to tell the form to rebuild. If we
  // don't do this, the form builder will not call buildForm().
  $form_state->setRebuild();
}

/**
 * Submit handler for the "remove one" button.
 *
 * Decrements the max counter and causes a form rebuild.
 */
function json_form_widget_remove_one(array &$form, FormStateInterface $form_state) {
  $widget_array_info = $form_state->get('json_form_widget_array');
  $field = $form_state->getTriggeringElement()['#name'];
  $amount = $widget_array_info[$field]['amount'];
  if ($amount > 1) {
    $widget_array_info[$field]['amount'] = $amount - 1;
    $widget_array_info[$field]['removing'] = TRUE;
    $form_state->set('json_form_widget_array', $widget_array_info);
  }
  // Since our buildForm() method relies on the value of 'num_names' to
  // generate 'name' form elements, we have to tell the form to rebuild. If we
  // don't do this, the form builder will not call buildForm().
  $form_state->setRebuild();
}

/**
 * Add custom submit handler to data form.
 */
function json_form_widget_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id === "node_data_form" || $form_id === "node_data_edit_form") {
    $form['actions']['submit']['#submit'][] = 'json_form_widget_save_dkan_file_submit';
  }
}

/**
 * Submit handler for uploaded elements on upload_or_link.
 */
function json_form_widget_save_dkan_file_submit($form, FormStateInterface $form_state) {
  if ($parents = $form_state->get('upload_or_link_element')) {
    foreach ($parents as $parent) {
      $uri = $form_state->getValue($parent);
      $filename = \Drupal::service('file_system')->basename($uri);
      $filename = urldecode($filename);
      $files = \Drupal::entityTypeManager()
        ->getStorage('file')
        ->loadByProperties(['filename' => $filename]);
      if (!empty($files)) {
        $file = reset($files);
        $file->setPermanent();
        $file->save();
        $file_usage = \Drupal::service('file.usage');
        $file_usage->add($file, 'json_form_widget', 'json_form_widget', \Drupal::currentUser()->id());
      }
    }
  }
}
