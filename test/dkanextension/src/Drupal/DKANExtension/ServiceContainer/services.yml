#This file is used by the Symfony Service Container

# Parameters can be changed by other services and are used as tokens in services section below.
parameters:
  dkan.entity_store.class: Drupal\DKANExtension\ServiceContainer\EntityStore
  dkan.page_store.class: Drupal\DKANExtension\ServiceContainer\PageStore
  dkan.listener.stores.class: Drupal\DKANExtension\Listener\StoresListener

  # Context initializer.
  dkan.context.initializer.class: Drupal\DKANExtension\Context\Initializer\DKANAwareInitializer

  dkan.parameters: {}

services:

  # Register the EntityStore class as a Service.
  dkan.entity_store:
    class: '%dkan.entity_store.class%'

  # Register the EntityStore class as a Service.
  dkan.page_store:
    class: '%dkan.page_store.class%'

  # Set our Initializer class so we can inject EntityStore into each EntityAware Context.
  dkan.context.initializer:
    class: '%dkan.context.initializer.class%'
    arguments:
      - '@dkan.entity_store'
      - '@dkan.page_store'
      - '%dkan.parameters%'
    tags:
      - { name: context.initializer }

  dkan.listener.stores:
    class: '%dkan.listener.stores.class%'
    calls:
      - [ setStore,['%dkan.entity_store.class%', '@dkan.entity_store']]
      - [ setStore,['%dkan.page_store.class%', '@dkan.page_store']]
    tags:
      - { name: event_dispatcher.subscriber, priority: 0 }
