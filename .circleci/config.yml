version: 2
jobs:
  build:
    machine:
      image: circleci/classic:latest
    environment:
      TEST_RESULTS: /tmp/test-results
      DKTL_VERSION: "4.0.0"
    steps:
      - run:
          name: Setup composer config
          command: |
            mkdir ~/.composer
            bash -c 'echo "{\"github-oauth\": {\"github.com\": \"$GITHUB_TOKEN\"}}"' > ~/.composer/auth.json
      - run:
          name: Install DKTL
          command: |
            git clone -b $DKTL_VERSION https://github.com/GetDKAN/dkan-tools.git ~/dkan-tools
            echo "export PATH=~/dkan-tools/bin:$PATH" >> $BASH_ENV
      - run:
          name: Initialize Project
          command: |
            v=$CIRCLE_BRANCH
            if [[ $v =~ ^[0-9]. ]]; then v="${v}-dev"; else v="dev-${v}"; fi;
            v="$v#${CIRCLE_SHA1}" && dktl init --dkan=$v
      - run:
          name: Make DKAN
          command: |
            dktl make
      - persist_to_workspace:
          root: ~
          paths:
            - dkan-tools
            - project
            - .composer
  unit_test:
    machine:
      image: circleci/classic:latest
    steps:
      - attach-workspace:
          at: ~
      - run:
          name: Setup dktl
          command: echo "export PATH=~/dkan-tools/bin:$PATH" >> $BASH_ENV
      - run:
          name: Run phpUnit tests
          command: |
            dktl xdebug:start
            dktl dkan:test-phpunit-coverage $CC_TEST_REPORTER_ID
  db_install:
    machine:
      image: circleci/classic:latest
    steps:
      - attach-workspace:
          at: ~
      - run:
          name: Setup dktl
          command: echo "export PATH=~/dkan-tools/bin:$PATH" >> $BASH_ENV
      - run:
          name: Install Drupal
          command: |
            dktl install
            dktl install:sample
  cypress_admin:
    machine:
      image: circleci/classic:latest
    steps:
      - attach-workspace:
          at: ~
      - run:
          name: Setup dktl
          command: echo "export PATH=~/dkan-tools/bin:$PATH" >> $BASH_ENV
      - run:
          name: Run DKAN admin cypress tests
          command: |
            dktl drush user:create testuser --password="2jqzOAnXS9mmcLasy"
            dktl drush user-add-role api_user testuser
            dktl drush user:create testeditor --password="testeditor"
            dktl drush user-add-role administrator testeditor
            dktl dkan:test-cypress
  dredd:
    machine:
      image: circleci/classic:latest
    steps:
      - attach-workspace:
          at: ~
      - run:
          name: Setup dktl
          command: echo "export PATH=~/dkan-tools/bin:$PATH" >> $BASH_ENV
      - run:
          name: Run DKAN dredd tests
          command: |
            dktl drush user:create testuser --password="2jqzOAnXS9mmcLasy"
            dktl drush user-add-role api_user testuser
            dktl dc exec web chmod -R 777 /var/www/docroot/sites/default/files/dkan-tmp
            dktl dkan:test-dredd
  cypress_frontend:
    machine:
      image: circleci/classic:latest
    steps:
      - attach-workspace:
          at: ~
      - run:
          name: Setup dktl
          command: echo "export PATH=~/dkan-tools/bin:$PATH" >> $BASH_ENV
      - run:
          name: Run frontend cypress tests
          command: |
            dktl frontend:install
            dktl frontend:build
            dktl drush cr
            dktl frontend:test
      - store_artifacts:
          path: docroot/modules/contrib/dkan/cypress/screenshots
      - store_artifacts:
          path: docroot/modules/contrib/dkan/cypress/videos
      - store_artifacts:
          path: src/frontend/cypress/screenshots
      - store_artifacts:
          path: src/frontend/cypress/videos
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - unit_test:
          requires:
            - build
      - db_install:
          requires:
            - unit_test
      - cypress_admin:
          requires:
            - db_install
      - cypress_frontend:
          requires:
            - db_install
      - dredd:
          requires:
            - db_install
      
