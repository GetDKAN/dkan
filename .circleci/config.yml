version: 2
jobs:
  build:
    machine:
      image: circleci/classic:latest
    environment:
      DKTL_VERSION: "4.0.0"
    steps:
      - run:
          name: Setup composer config
          command: |
            mkdir ~/.composer
            bash -c 'echo "{\"github-oauth\": {\"github.com\": \"$GITHUB_TOKEN\"}}"' > ~/.composer/auth.json
      - run:
          name: Install DKTL
          command: |
            git clone -b $DKTL_VERSION https://github.com/GetDKAN/dkan-tools.git ~/dkan-tools
            echo "export PATH=~/dkan-tools/bin:$PATH" >> $BASH_ENV
      - run:
          name: Initialize Project
          command: |
            v=$CIRCLE_BRANCH
            if [[ $v =~ ^[0-9]. ]]; then v="${v}-dev"; else v="dev-${v}"; fi;
            # v="$v#`echo $CIRCLE_SHA1 | cut -c1-7`"
            dktl init --dkan=$v
      - run:
          name: Make DKAN
          command: |
            dktl make
      - persist_to_workspace:
          root: ~/
          paths:
            - dkan-tools
            - project
            - .composer
  phpunit_dredd:
    machine:
      image: circleci/classic:latest
    steps:
      - attach-workspace:
          at: ~/
      - run:
          name: Set up DKAN Tools
          command: |
            export PATH=~/dkan-tools/bin:$PATH
            echo "export PATH=~/dkan-tools/bin:$PATH" >> $BASH_ENV
            dktl dc up -d
      - run:
          name: Run PHPUnit Tests
          command: |
            dktl dkan:test-phpunit
      - run:
          name: Run CodeClimate Test Coverage Report
          command: |
            dktl dkan:test-phpunit-coverage $CC_TEST_REPORTER_ID
      - run:
          name: Install Drupal
          command: sleep 10 && dktl install
      - run:
          name: Run DKAN dredd tests
          command: |
            sleep 10
            dktl install:sample
            dktl drush user:create testuser --password="2jqzOAnXS9mmcLasy"
            dktl drush user-add-role api_user testuser
            dktl dc exec web chmod -R 777 /var/www/docroot/sites/default/files/dkan-tmp
            dktl dkan:test-dredd
  cypress_backend:
    machine:
      image: circleci/classic:latest
    steps:
      - attach-workspace:
          at: ~/
      - run:
          name: Set up DKAN Tools
          command: |
            export PATH=~/dkan-tools/bin:$PATH
            echo "export PATH=~/dkan-tools/bin:$PATH" >> $BASH_ENV
            dktl dc up -d
      - run:
          name: Install Drupal
          command: sleep 10 && dktl install
      - run:
          name: Run DKAN admin cypress tests
          command: |
            dktl install:sample
            dktl drush user:create testuser --password="2jqzOAnXS9mmcLasy"
            dktl drush user-add-role api_user testuser
            dktl drush user:create testeditor --password="testeditor"
            dktl drush user-add-role administrator testeditor
            dktl dkan:test-cypress
      - store_artifacts:
          path: docroot/modules/contrib/dkan/cypress/screenshots
      - store_artifacts:
          path: docroot/modules/contrib/dkan/cypress/videos
  cypress_frontend:
    machine:
      image: circleci/classic:latest
    steps:
      - attach-workspace:
          at: ~/
      - run:
          name: Set up DKAN Tools
          command: |
            export PATH=~/dkan-tools/bin:$PATH
            echo "export PATH=~/dkan-tools/bin:$PATH" >> $BASH_ENV
            dktl dc up -d
      - run:
          name: Install Drupal
          command: sleep 10 && dktl install
      - run:
          name: Set up frontend
          command: |
            dktl install:sample
            dktl frontend:install
            dktl frontend:build
            dktl drush cr
      - run:
          name: Run frontend cypress tests
          command: dktl frontend:test
      - store_artifacts:
          path: src/frontend/cypress/screenshots
      - store_artifacts:
          path: src/frontend/cypress/videos
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - phpunit_dredd:
          requires:
            - build
      - cypress_backend:
          requires:
            - build
      - cypress_frontend:
          requires:
            - build
      
