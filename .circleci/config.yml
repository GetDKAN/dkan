# Circle CI script to run a matrix of tests in DDev.

version: '2.1'
orbs:
  docker: circleci/docker@2.2.0

commands:
  install-ddev:
    steps:
      - run:
          name: Install DDev
          command: |
            set -e
            sudo rm -rf /etc/apt/sources.list.d/heroku.list
            sudo apt-get update
            sudo apt-get install ca-certificates
            curl https://apt.fury.io/drud/gpg.key | sudo apt-key add -
            echo "deb https://apt.fury.io/drud/ * *" | sudo tee -a /etc/apt/sources.list.d/ddev.list
            sudo apt update && sudo apt install -y ddev

  prepare_build:
    # TODO: Currently the DKAN ddev addon adds an extra config file called
    # config.dkan.yml. This prevents us from just calling
    # `ddev config --php-version` to change PHP version. In the future,
    # change this around so we can just tell ddev to change the PHP version.
    parameters:
      php_version:
        description: 'PHP major.minor for DDev to use.'
        default: '8.0'
        type: string
      addon_branch:
        description: 'Repo branch name for the dkan-ddev-addon you want to test against.'
        default: 'main'
        type: string
      dkan_recommended_branch:
        description: 'Branch of getdkan/recommended-project to use.'
        default: '9.5.x-dev'
        type: string
    steps:
      - run:
          name: Set up composer config
          command: |
            mkdir ~/.composer
            bash -c 'echo "{\"github-oauth\": {\"github.com\": \"$GITHUB_TOKEN\"}}"' > ~/.composer/auth.json
      - install-ddev
      - run:
          name: Build site codebase
          command: |
            which ddev
            ddev --version
            ddev config --project-name test-$CIRCLE_WORKFLOW_JOB_ID --project-type drupal9 --docroot docroot --create-docroot
            ddev get https://github.com/GetDKAN/dkan-ddev-addon/archive/refs/heads/<< parameters.addon_branch >>.tar.gz
            # Modify config to use our PHP version.
            sed -i 's/^php_version.*$/php_version: "<< parameters.php_version >>"/' .ddev/config.dkan.yaml
            # Clear out omit_containers.
            sed -i '/omit_containers/d' .ddev/config.dkan.yaml
            # Don't load the DBA container.
            echo "omit_containers: [dba]" >> .ddev/config.dkan.yaml
            ddev restart
            ddev status
            ddev dkan-init --project-version << parameters.dkan_recommended_branch>> --force
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            mkdir -p test_results

  prepare_site:
    parameters:
      upgrade:
        description: 'If true, will install the latest stable version and test upgrade'
        default: false
        type: boolean
      needs_cypress:
        description: 'If true, will add Cypress to the DDev environment'
        default: false
        type: boolean
    steps:
      - checkout:
          path: dkan
      - when:
          condition: << parameters.needs_cypress >>
          steps:
            - run:
                # TODO: This hacks around the specific Cypress version requirement for DKAN. Find a better way.
                name: Cypressify ddev
                command: |
                  mv .ddev/misc/docker-compose.cypress.yaml .ddev/docker-compose.cypress.yaml
                  ddev restart
      - when:
          condition: << parameters.upgrade >>
          steps:
            - run:
                name: Install site and update to dev dkan
                command: |
                  ddev composer show getdkan/dkan
                  # Install dkan release specified by getdkan/recommended-project.
                  ddev dkan-site-install
                  # Switch over to using the repo code for dkan and update.
                  ddev composer config repositories.dkan path dkan
                  ddev composer require getdkan/dkan:@dev --no-install -W
                  ddev composer update getdkan/dkan -W
                  ddev composer show getdkan/dkan
                  ddev drush updb -y
                  ddev drush rq
      - unless:
          condition: << parameters.upgrade >>
          steps:
            - run:
                name: Install site
                command: |
                  ddev composer config repositories.dkan path dkan
                  ddev composer require getdkan/dkan:@dev --no-install -W
                  ddev composer update getdkan/dkan -W
                  ddev composer show getdkan/dkan
                  ddev dkan-site-install
                  ddev drush updb -y
                  ddev drush rq

jobs:
  phpunit:
    executor: docker/machine
    parameters:
      php_version:
        description: 'PHP major.minor for DDev to use.'
        default: '8.0'
        type: string
      dkan_recommended_branch:
        description: 'Branch of getdkan/recommended-project to use.'
        default: '9.5.x-dev'
        type: string
      report_coverage:
        description: 'Generate coverage report and send it to CodeClimate'
        default: false
        type: boolean
      upgrade:
        description: 'If true, will install the latest stable DKAN version and test upgrade'
        default: false
        type: boolean
    steps:
      - prepare_build:
          php_version: << parameters.php_version >>
          dkan_recommended_branch: << parameters.dkan_recommended_branch >>
      - prepare_site:
          upgrade: << parameters.upgrade >>
          needs_cypress: false
      - when:
          condition: << parameters.report_coverage >>
          steps:
            - run:
                name: Run PHPUnit tests with coverage report
                environment:
                  XDEBUG_MODE: coverage
                command: |
                  ddev xdebug on
                  $CIRCLE_WORKING_DIRECTORY/cc-test-reporter before-build
                  ddev dkan-phpunit \
                    --coverage-clover /var/www/html/docroot/modules/contrib/dkan/clover.xml \
                    --coverage-html /var/www/html/docroot/modules/contrib/dkan/coverage-html \
                    --log-junit /var/www/html/docroot/modules/contrib/dkan/junit/junit.xml
                  TEST_RESULT=$?
                  if [ -f docroot/modules/contrib/dkan/clover.xml ]; then
                    echo "Coverage file: docroot/modules/contrib/dkan/clover.xml"
                  else
                    echo "Coverage file not created: $CIRCLE_WORKING_DIRECTORY/docroot/modules/contrib/dkan/clover.xml"
                  fi
                  cd docroot/modules/contrib/dkan
                  $CIRCLE_WORKING_DIRECTORY/cc-test-reporter after-build \
                    --coverage-input-type clover \
                    --prefix /var/www/html/dkan \
                    --exit-code $TEST_RESULT
                  exit $TEST_RESULT
            - store_artifacts:
                path: docroot/modules/contrib/dkan/coverage-html
      - unless:
          condition: << parameters.report_coverage >>
          steps:
            - run:
                name: Run PHPUnit tests
                command: |
                  ddev dkan-phpunit \
                    --log-junit /var/www/html/docroot/modules/contrib/dkan/junit/junit.xml
      - store_test_results:
          path: dkan/junit

  cypress:
    machine:
      image: ubuntu-2004:current
    parallelism: 4
    parameters:
      php_version:
        description: 'PHP major.minor for DDev to use.'
        default: '8.0'
        type: string
      dkan_recommended_branch:
        description: 'Branch of getdkan/recommended-project to use.'
        default: '9.5.x-dev'
        type: string
      upgrade:
        description: 'If true, will install the latest stable DKAN version and test upgrade'
        default: false
        type: boolean
    steps:
      - prepare_build:
          php_version: << parameters.php_version >>
          dkan_recommended_branch: << parameters.dkan_recommended_branch >>
      - prepare_site:
          upgrade: << parameters.upgrade >>
          needs_cypress: true
      - run:
          name: Run Cypress tests
          command: |
            mkdir dkan/cypress/tmp
            mkdir dkan/cypress/results
            mv $(circleci tests glob dkan/cypress/integration/*.spec.js | circleci tests split --split-by=timings) dkan/cypress/tmp || true
            rm dkan/cypress/integration/*
            mv dkan/cypress/tmp/* dkan/cypress/integration
            ddev dkan-module-test-cypress \
              --headless \
              --reporter junit \
              --reporter-options "mochaFile=cypress/results/cypress-results-[hash].xml"
      - store_artifacts:
          path: dkan/cypress/screenshots
      - store_artifacts:
          path: dkan/cypress/videos
      - store_test_results:
          path: dkan/cypress/results

workflows:
  version: 2
  install_and_test:
    # We use matrix for these parameters so that we can tell them apart in report screens.
    jobs:
      - cypress:
          name: install_test_cypress
          dkan_recommended_branch: '9.5.x-dev'
      - phpunit:
          matrix:
            parameters:
              dkan_recommended_branch: [ '9.4.x-dev']
              php_version: [ '7.4' ]
      - phpunit:
          matrix:
            parameters:
              dkan_recommended_branch: [ '9.5.x-dev']
              php_version: [ '7.4', '8.1' ]
      - phpunit:
          name: 'Install target (Drupal 9.5, PHP 8.0)'
          report_coverage: true
          matrix:
            parameters:
              dkan_recommended_branch: [ '9.5.x-dev']
              php_version: [ '8.0' ]
      - phpunit:
         matrix:
           parameters:
             dkan_recommended_branch: [ '10.0.x-dev']
             php_version: [ '8.1' ]
      - phpunit:
          matrix:
            parameters:
              dkan_recommended_branch: [ '10.1.x-dev' ]
              php_version: [ '8.1' ]
  upgrade_and_test:
    jobs:
      - cypress:
          name: upgrade_test_cypress
          upgrade: true
          dkan_recommended_branch: '9.5.x-dev'
      - phpunit:
          name: 'Upgrade target (Drupal 9.5, PHP 8.0)'
          upgrade: true
          matrix:
            parameters:
              dkan_recommended_branch: [ '9.5.x-dev']
              php_version: [ '8.0' ]
