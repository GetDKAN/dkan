# Circle CI script to run a matrix of tests in DDev.

version: '2.1'
orbs:
  docker: circleci/docker@2.2.0

commands:
  install-ddev:
    steps:
      - run:
          name: Install DDev
          command: |
            set -e
            sudo rm -rf /etc/apt/sources.list.d/heroku.list
            sudo apt-get update
            sudo apt-get install ca-certificates
            curl https://apt.fury.io/drud/gpg.key | sudo apt-key add -
            echo "deb https://apt.fury.io/drud/ * *" | sudo tee -a /etc/apt/sources.list.d/ddev.list
            sudo apt update && sudo apt install -y ddev

  prepare_build:
    # TODO: Figure out the best way to share this build between the various jobs.
    parameters:
      upgrade:
        description: "If true, will install the latest stable version and test upgrade"
        default: false
        type: boolean
    steps:
      - run:
          name: Set up composer config
          command: |
            mkdir ~/.composer
            bash -c 'echo "{\"github-oauth\": {\"github.com\": \"$GITHUB_TOKEN\"}}"' > ~/.composer/auth.json
      - install-ddev
      - run:
          name: Build site codebase
          command: |
            which ddev
            ddev --version
            ddev config --project-name test-$CIRCLE_WORKFLOW_JOB_ID --project-type drupal9 --docroot docroot --create-docroot
            ddev get https://github.com/GetDKAN/dkan-ddev-addon/archive/refs/heads/main.tar.gz
            # Modify config to use our PHP version.
            if [ -f .ddev/config.dkan.yaml ]; then
              echo "Let's try."
              sed -i 's/^php_version.*$/php_version: "7.4"/' .ddev/config.dkan.yaml
            else
              echo "No config file: $CIRCLE_WORKING_DIRECTORY/.ddev/config.dkan.yaml"
            fi
            # Clear out omit_containers.
            #sed -i '' '/omit_containers/d' .ddev/config.dkan.yaml
            # Don't load the DBA container.
            #echo "omit_containers: [dba]" >> .ddev/config.dkan.yaml
            ddev restart
            ddev status
            ddev dkan-init --force
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            mkdir -p test_results

  prepare_drupal_core:
    # TODO: Hopefully getdkan/recommended-project will have tagged releases at some point.
    parameters:
      drupal_core_constraint:
        description: "Drupal core version to use as a Composer constraint."
        default: '~9.5.0'
        type: string
    steps:
      - run:
          name: Use Drupal core version
          command: |
            ddev composer show "drupal/core*" --no-ansi
            ddev composer require drupal/core-composer-scaffold:<< parameters.drupal_core_constraint >> --no-update
            ddev composer require drupal/core-project-message:<< parameters.drupal_core_constraint >> --no-update
            ddev composer require drupal/core-recommended:<< parameters.drupal_core_constraint >> --no-update
            ddev composer require --dev drupal/core-dev:<< parameters.drupal_core_constraint >> --no-update
            ddev composer update -W --no-audit

  prepare_site:
    parameters:
      upgrade:
        description: "If true, will install the latest stable version and test upgrade"
        default: false
        type: boolean
      needs_cypress:
        description: "If true, will add Cypress to the DDev environment"
        default: false
        type: boolean
    steps:
      - checkout:
          path: dkan
      - when:
          condition: << parameters.needs_cypress >>
          steps:
            - run:
                # TODO: This hacks around the specific Cypress version requirement for DKAN. Find a better way.
                name: Cypressify ddev
                command: |
                  mv .ddev/misc/docker-compose.cypress.yaml .ddev/docker-compose.cypress.yaml
                  ddev restart
      - when:
          condition: << parameters.upgrade >>
          steps:
            - run:
                name: Install site and update to dev dkan
                command: |
                  ddev composer show getdkan/dkan
                  # Install dkan release specified by getdkan/recommended-project.
                  ddev dkan-site-install
                  # Switch over to using the repo code for dkan and update.
                  ddev composer config repositories.dkan path dkan
                  ddev composer require getdkan/dkan:@dev --no-install -W
                  ddev composer update getdkan/dkan -W
                  ddev composer show getdkan/dkan
                  ddev drush updb -y
                  ddev drush rq
      - unless:
          condition: << parameters.upgrade >>
          steps:
            - run:
                name: Install site
                command: |
                  ddev composer config repositories.dkan path dkan
                  ddev composer require getdkan/dkan:@dev --no-install -W
                  ddev composer update getdkan/dkan -W
                  ddev composer show getdkan/dkan
                  ddev dkan-site-install
                  ddev drush updb -y
                  ddev drush rq

jobs:
  phpunit:
    executor: docker/machine
    parameters:
      php_version:
        description: "PHP major.minor for DDev to use."
        default: '8.0'
        type: string
      drupal_core_constraint:
        description: "Drupal core version to use as a Composer constraint."
        default: '~9.5.0'
        type: string
      upgrade:
        description: "If true, will install the latest stable version and test upgrade"
        default: false
        type: boolean
      needs_cypress:
        description: "If true, will add Cypress to the DDev environment"
        default: false
        type: boolean
    steps:
      - checkout
      - docker/install-docker-tools
      - prepare_build:
          upgrade: << parameters.upgrade >>
      - prepare_drupal_core:
          drupal_core_constraint: << parameters.drupal_core_constraint >>
      - prepare_site:
          upgrade: << parameters.upgrade >>
          needs_cypress: << parameters.needs_cypress >>
      - when:
          condition: << parameters.upgrade >>
          steps:
            - run:
                name: Run PHPUnit tests
                command: |
                  ddev dkan-test-phpunit \
                    --log-junit /var/www/html/docroot/modules/contrib/dkan/junit.xml
      - unless:
          # Only collect coverage info for non-upgrade PHPUnit tests.
          condition: << parameters.upgrade >>
          steps:
            - run:
                name: Run PHPUnit tests with coverage report
                environment:
                  XDEBUG_MODE: coverage
                command: |
                  ddev xdebug on
                  $CIRCLE_WORKING_DIRECTORY/cc-test-reporter before-build
                  ddev dkan-test-phpunit \
                    --coverage-clover /var/www/html/docroot/modules/contrib/dkan/clover.xml \
                    --log-junit /var/www/html/docroot/modules/contrib/dkan/junit/junit.xml
                  TEST_RESULT=$?
                  if [ -f docroot/modules/contrib/dkan/clover.xml ]; then
                    echo "Coverage file: docroot/modules/contrib/dkan/clover.xml"
                  else
                    echo "Coverage file not created: $CIRCLE_WORKING_DIRECTORY/docroot/modules/contrib/dkan/clover.xml"
                  fi
                  cd docroot/modules/contrib/dkan
                  $CIRCLE_WORKING_DIRECTORY/cc-test-reporter after-build \
                    --coverage-input-type clover \
                    --prefix /var/www/html/dkan \
                    --exit-code $TEST_RESULT
                  exit $TEST_RESULT

workflows:
  version: 2
  install_and_test:
    jobs:
      - phpunit:
          matrix:
            parameters:
              drupal_core_constraint: ["~9.5.0", "~9.4.0"]
