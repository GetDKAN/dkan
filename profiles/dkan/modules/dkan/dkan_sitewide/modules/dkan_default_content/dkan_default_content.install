<?php

/**
 * 
 */
/**
 * Implements hook_uninstall().
 */
function dkan_default_content_uninstall(){
  ctools_include('pages', 'dkan_default_content');
  ctools_include('groups', 'dkan_default_content');
  ctools_include('datasets', 'dkan_default_content');
  ctools_include('file', 'defaultcontent', 'plugins');
  $nids_to_delete = array();
  // Collect Pages to Delete
  $pages = dkan_default_content_available_pages();
  foreach($pages as $loadable){
    $page = call_user_func('dkan_default_content_' . $loadable . '_page');
    dkan_default_content_collect_id($nids_to_delete, 'node', 'page', $page['title']);
  }
  // Collect Groups to Delete
  $groups = dkan_default_content_available_groups();
  foreach ($groups as $loadable) {
    $group = call_user_func('dkan_default_content_' . $loadable . '_group');
    dkan_default_content_collect_id($nids_to_delete, 'node', 'group', $group['title']);
  }
  // Collect Datasets and Resources to delete 
  // (this should be integrated as a method of the Dataset class)
  $datasets = dkan_default_content_available_datasets();
  foreach($datasets as $loadable){
    $dataset =  call_user_func('dkan_default_content_' . $loadable . '_dataset');
    dkan_default_content_collect_id($nids_to_delete, 'node', 'dataset', $dataset['title']);
    $resources = call_user_func('dkan_default_content_' . $loadable . '_resources');
    foreach($resources as $resource) {
      dkan_default_content_collect_id($nids_to_delete, 'node', 'resource', $resource['title']);
    }
  }
  // Delete collected nids
  node_delete_multiple($nids_to_delete);
}

/**
 * Helper function to query entities by title in order to keep 
 * things as DRY as possible
 */
function dkan_default_content_collect_id(&$nids, $type, $bundle, $title){
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', $type)
        ->entityCondition('bundle', $bundle)
        ->propertyCondition('title', $title)
        ->range(0, 1);
  $result = $query->execute();
  if(isset($result[$type])) {
    reset($result[$type]);
    $nids[] = key($result[$type]);
  }
}
