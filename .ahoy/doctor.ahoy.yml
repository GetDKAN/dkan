ahoyapi: v1
version: 0.0.0
commands:
  all:
    usage: Checks that the docker environment is healthy and ready for development
    cmd: |
      set -e
      echo "Checking docker machine status..."
      ahoy doctor machine

      echo "Checking docker machine IP address..."
      ahoy doctor ip

      echo "Checking docker daemon..."
      ahoy doctor daemon

      echo "Checking NFS file sharing..."
      ahoy doctor nfs

      echo "Checking projet containers..."
      ahoy doctor containers

      echo "Checking site URL accessibility..."
      ahoy doctor site

      echo
      echo "[Success] Docktor check done."

  machine:
    usage: Checks if the docker machine is running
    cmd: |
      if [ $(docker-machine status $DOCKER_MACHINE_NAME) == 'Running' ]; then
        echo "[OK] The \"$DOCKER_MACHINE_NAME\" docker machine is running."
      else
        echo "[Error] The \"$DOCKER_MACHINE_NAME\" docker machine is not running: $(docker-machine status $DOCKER_MACHINE_NAME)"
        exit 1
      fi
  ip:
    usage: Checks if docker machine IP address corresponds to the $DOCKER_HOST environment variable
    cmd: |
      if [ $(echo "$DOCKER_HOST"|grep $(docker-machine ip $DOCKER_MACHINE_NAME)|wc -l) -gt 0 ]; then
        echo "[OK] The \"$DOCKER_MACHINE_NAME\"  docker machine IP address is setup properly."
      else
        echo "[Error] The DOCKER_HOST variable ($DOCKER_HOST) does not correspond to the \"$DOCKER_MACHINE_NAME\" docker machine IP address ($(docker-machine ip $DOCKER_MACHINE_NAME))."
        exit 1
      fi
  daemon:
    usage: Checks if the docker client can connect to the docker daemon on Boot2Docker
    cmd: |
      if [ $(docker info|grep -i 'Operating System: Boot2Docker'|wc -l) -eq 1 ]; then
        echo "[OK] The the docker daemon is accessible from this machine."
      else
        echo "[Error] The the docker daemon is not accessible from this machine."
        exit 1
      fi
  nfs:
    usage: Checks if the NFS server share is properly configured and that the docker machine connects to the NFS server.
    cmd: |
      if [ $(showmount -e|grep "$(docker-machine ip $DOCKER_MACHINE_NAME)"|wc -l) -eq 1 ]; then
        echo "[OK] The NFS share is setup properly on your host machine."
        serverip=$(docker-machine ssh default mount|grep nfs|cut -d ':' -f1)
        if [ $(echo $serverip|wc -c) -gt 0 ] && [ $(ifconfig|grep "$serverip"|wc -l) -gt 0 ]; then
          echo "[OK] The \"$DOCKER_MACHINE_NAME\" docker machine can connect to the host NFS server at $serverip"
        else
          echo "[Error] The \"$DOCKER_MACHINE_NAME\" docker machine cannot connect to the host NFS server."
          exit 1
        fi
      else
        echo "[Error] The docker machine NFS share is not setup properly."
        if [ $(grep " $(docker-machine ip $DOCKER_MACHINE_NAME)(rw,sync,all_squash,anonuid=1000,anongid=100,no_subtree_check)" /etc/exports|wc -l) -eq 1 ]; then
          echo "[OK] Your NFS share configuration is correct. Please make sure that your NFS server is running with no issues."
        else
          echo "[Error] Your NFS share configuration might not be correct. Please check your NFS configuration in /etc/exports and make sure your NFS server is running with no issues."
        fi
        exit 1
      fi
  containers:
    usage: Checks that all site containers are up
    cmd: |
      containers=$(ahoy docker ps|grep -i ' up '|cut -d ' ' -f1)
      for service in $(ahoy docker compose config --services); do
        if [ $(echo $containers|grep "\_$service\_"|wc -l) -gt 0 ]; then
          echo "[OK] The \"$service\" container is running."
        else
          echo "[Error] The \"$service\" container is not running: $(ahoy docker ps|grep "$service")"
          exit 1
        fi
      done
  site:
    usage: Checks that the site URL is accessible
    cmd: |
      url=$(ahoy docker url)
      if curl --output /dev/null --silent --head --fail "$url)"; then
        echo "[OK] URL $url is reachable."
      else
        echo "[Error] URL $url is not reachable."
        exit 1
      fi
